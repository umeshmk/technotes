(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{434:function(a,s,t){"use strict";t.r(s);var e=t(45),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"operators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[a._v("#")]),a._v(" Operators")]),a._v(" "),t("h2",{attrs:{id:"basics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[a._v("#")]),a._v(" Basics")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Unary")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Binary")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Tertiary")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Use brackets to force precedence")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"arithmatic"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arithmatic"}},[a._v("#")]),a._v(" Arithmatic")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"assignment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assignment"}},[a._v("#")]),a._v(" Assignment")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// "equals =" and NOT "equal to =="')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// $a = $a + 5")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$obj")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// $a is pointer to object. Use "clone()" to duplicate object')]),a._v("\n\n")])])]),t("h2",{attrs:{id:"bitwise-on-specific-bits-in-integer-only"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitwise-on-specific-bits-in-integer-only"}},[a._v("#")]),a._v(" Bitwise - On specific bits in integer only")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// bits shifted on either ends is discarded")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"comparison"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#comparison"}},[a._v("#")]),a._v(" Comparison")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Equal to")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!==")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// strict equal to")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// less/greater than")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">=")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=>")]),a._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//spaceship (php7)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("??")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Null coalesce (IF statement) [if $a is undefined/null then 23 is returned]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("??")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("??")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$c")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// chaining for quick IF..ELSE like checks")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"increment-decrement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#increment-decrement"}},[a._v("#")]),a._v(" Increment/decrement")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"logical"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logical"}},[a._v("#")]),a._v(" Logical")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AND")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("OR")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("XOR")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// (AND) - (&&) has diferent precedence. Use either words "AND-OR" or Symbol "&&-||" combination')]),a._v("\n\n")])])]),t("h2",{attrs:{id:"type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[a._v("#")]),a._v(" Type")]),a._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" instance_of "),t("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[a._v("MyClass")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" instance_of MyClassParent        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// MyClass extends MyClassParent")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" instance_of MyInterface          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// MyClass implements MyInterface")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);
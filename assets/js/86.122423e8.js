(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{451:function(e,o,v){"use strict";v.r(o);var n=v(45),t=Object(n.a)({},(function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"network"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[e._v("#")]),e._v(" Network")]),e._v(" "),v("ul",[v("li",[v("p",[v("em",[e._v("Isolate")]),e._v(" containers from other containers using "),v("em",[e._v("networks")])])]),e._v(" "),v("li",[v("p",[e._v("Network drivers")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("1] bridge")]),e._v(" "),v("ul",[v("li",[e._v("all containers are always started in this network unless mentioned other")]),e._v(" "),v("li",[e._v("limited to single host")])])]),e._v(" "),v("li",[v("p",[e._v("2] overlay")]),e._v(" "),v("ul",[v("li",[e._v("multiple hosts")]),e._v(" "),v("li",[e._v("advanced than bridge")])])])])]),e._v(" "),v("li",[v("p",[e._v("Docker Engine default networks")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("docker network ls")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("  NETWORK ID          NAME                DRIVER\n  18a2866682b8        none                null\n  c288470c46f6        host                host\n  7b369448dccb        bridge              bridge\n")])])])])])]),e._v(" "),v("li",[v("p",[e._v("Inspect ( get Container's ip address)")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("docker network inspect <my_network>")])])])]),e._v(" "),v("li",[v("p",[e._v("Remove container from bridge network")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("docker network disconnect bridge <containerID>")])])])]),e._v(" "),v("li",[v("p",[e._v("can remove containers from network but NOT "),v("em",[e._v("bridge network")]),e._v(" itself")])]),e._v(" "),v("li",[v("p",[e._v("Create own network")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("docker network create -d <driver> <my_network>")])])])]),e._v(" "),v("li",[v("p",[e._v("Inspect network")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("docker network inspect <my_network>")])])])]),e._v(" "),v("li",[v("p",[e._v("new container connects to network")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("docker run -d --net=<my_network> --name <mycontainer> <username/image>")])])])]),e._v(" "),v("li",[v("p",[e._v("containers can conect to "),v("code",[e._v("1 - n networks")])]),e._v(" "),v("ul",[v("li",[v("code",[e._v("docker network connect <my_network> <mycontainer> ...")])])])]),e._v(" "),v("li")]),e._v(" "),v("hr"),e._v(" "),v("h1",{attrs:{id:"volumes"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#volumes"}},[e._v("#")]),e._v(" Volumes")]),e._v(" "),v("ul",[v("li",[v("p",[v("em",[e._v("bind mount")])]),e._v(" "),v("ul",[v("li",[e._v("host data [folder,files] is mounted inside container")]),e._v(" "),v("li",[e._v("managed by host")])])]),e._v(" "),v("li",[v("p",[v("em",[e._v("volume")]),e._v(" [Recommended]")]),e._v(" "),v("ul",[v("li",[e._v("container data is stored in "),v("em",[v("myVol")],1),e._v(" directory in host")]),e._v(" "),v("li",[e._v("managed by docker")]),e._v(" "),v("li",[e._v("not controlled by storage drivers")])])]),e._v(" "),v("li",[v("p",[v("em",[e._v("tmpfs mount")])]),e._v(" "),v("ul",[v("li",[e._v("temporary container data in host's memory/swap")]),e._v(" "),v("li",[e._v("removed when container stop")]),e._v(" "),v("li",[e._v("not shared between containers")]),e._v(" "),v("li",[e._v("only on linux")])])]),e._v(" "),v("li",[v("p",[e._v("Advantages "),v("code",[e._v("Volume")]),e._v(" over "),v("code",[e._v("bind mount")])]),e._v(" "),v("ul",[v("li",[e._v("volumes are managed by docker")]),e._v(" "),v("li",[e._v("easy to "),v("code",[e._v("backup")])]),e._v(" "),v("li",[e._v("can use docker "),v("code",[e._v("API")])]),e._v(" "),v("li",[e._v("works on both "),v("code",[e._v("windows & linux containers")])]),e._v(" "),v("li",[e._v("safe to "),v("code",[e._v("share")]),e._v(" between many containers")]),e._v(" "),v("li",[e._v("volume "),v("code",[e._v("drivers")]),e._v(" can store on cloud")]),e._v(" "),v("li",[e._v("can "),v("code",[e._v("encrypt")]),e._v(" data")]),e._v(" "),v("li",[e._v("new volume can be prepopulated by container")]),e._v(" "),v("li",[e._v("better than persisting data in containers")]),e._v(" "),v("li",[e._v("using volume does not increase container "),v("code",[e._v("size")])]),e._v(" "),v("li",[e._v("volume exists "),v("code",[e._v("outside")]),e._v(" of container's lifecycle")])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("-v")]),e._v(" or "),v("code",[e._v("--volume")]),e._v(" ["),v("code",[e._v("--mount")]),e._v(" is recommended & easy since v17.06]["),v("em",[e._v("No support for services")]),e._v("]")]),e._v(" "),v("ul",[v("li",[e._v("3 fields "),v("code",[e._v("[name : path/in/container : option1,option2..]")])])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("--mount")]),e._v(" ["),v("em",[e._v("support for services")]),e._v("]")]),e._v(" "),v("ul",[v("li",[e._v("many "),v("code",[e._v("key=Value")]),e._v(" pairs")]),e._v(" "),v("li",[v("code",[e._v("type")]),e._v(" = "),v("em",[e._v("[bind or volume or tmpfs]")])]),e._v(" "),v("li",[v("code",[e._v("source/src")]),e._v(" of mount\n"),v("ul",[v("li",[e._v("omitted for "),v("em",[e._v("anonymous")]),e._v(" volumes")]),e._v(" "),v("li",[e._v("this is name for "),v("em",[e._v("named")]),e._v(" volumes")])])]),e._v(" "),v("li",[v("code",[e._v("destination/dst/target")]),e._v(" = *[path/inside/container]")]),e._v(" "),v("li",[v("code",[e._v("readonly")]),e._v(" "),v("em",[e._v("option")]),e._v(" makes readonly")]),e._v(" "),v("li",[v("code",[e._v("volume-opt")]),e._v(" "),v("em",[e._v("option")])])])])]),e._v(" "),v("h4",{attrs:{id:"note"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#note"}},[e._v("#")]),e._v(" Note")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("running "),v("code",[e._v("container")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("  # will *create* <myVol> if not yet created else *just use* it.\n  # *Prepopulate* ie.copy [/app/everything] to [myVol] if creating volume\n  # other containers using <myVol> can also *use data* on <myVol>\n  docker run -d  --name devtest \\\n    --mount source=myvol,target=/app \\\n    nginx:latest\n")])])])]),e._v(" "),v("li",[v("p",[e._v("running "),v("code",[e._v("service")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("  # each service has *n* containers each having separate *<myVo1> <myVol2>....*\n  docker service create -d --name devtest-service \\\n      --mount source=myvol,target=/app \\\n      nginx:latest\n")])])])])]),e._v(" "),v("hr"),e._v(" "),v("h1",{attrs:{id:"cheatsheet"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cheatsheet"}},[e._v("#")]),e._v(" Cheatsheet")]),e._v(" "),v("p",[e._v("docker volume create "),v("myVol",[e._v("\ndocker volume ls\ndocker volume inspect "),v("myVol",[e._v("\ndocker volume rm "),v("mtVol")],1)],1)],1)])}),[],!1,null,null,null);o.default=t.exports}}]);